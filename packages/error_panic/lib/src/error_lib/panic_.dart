// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// generate panic_
class lang_panic {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  lang_panic(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  lang_panic.fromLookup(ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup) : _lookup = lookup;

  int ErrorPanic() {
    return _ErrorPanic();
  }

  late final _ErrorPanicPtr = _lookup<ffi.NativeFunction<GoInt32 Function()>>('ErrorPanic');
  late final _ErrorPanic = _ErrorPanicPtr.asFunction<int Function()>();
}

typedef __u_char = ffi.UnsignedChar;
typedef Dart__u_char = int;
typedef __u_short = ffi.UnsignedShort;
typedef Dart__u_short = int;
typedef __u_int = ffi.UnsignedInt;
typedef Dart__u_int = int;
typedef __u_long = ffi.UnsignedLong;
typedef Dart__u_long = int;
typedef __int8_t = ffi.SignedChar;
typedef Dart__int8_t = int;
typedef __uint8_t = ffi.UnsignedChar;
typedef Dart__uint8_t = int;
typedef __int16_t = ffi.Short;
typedef Dart__int16_t = int;
typedef __uint16_t = ffi.UnsignedShort;
typedef Dart__uint16_t = int;
typedef __int32_t = ffi.Int;
typedef Dart__int32_t = int;
typedef __uint32_t = ffi.UnsignedInt;
typedef Dart__uint32_t = int;
typedef __int64_t = ffi.Long;
typedef Dart__int64_t = int;
typedef __uint64_t = ffi.UnsignedLong;
typedef Dart__uint64_t = int;
typedef __int_least8_t = __int8_t;
typedef __uint_least8_t = __uint8_t;
typedef __int_least16_t = __int16_t;
typedef __uint_least16_t = __uint16_t;
typedef __int_least32_t = __int32_t;
typedef __uint_least32_t = __uint32_t;
typedef __int_least64_t = __int64_t;
typedef __uint_least64_t = __uint64_t;
typedef __quad_t = ffi.Long;
typedef Dart__quad_t = int;
typedef __u_quad_t = ffi.UnsignedLong;
typedef Dart__u_quad_t = int;
typedef __intmax_t = ffi.Long;
typedef Dart__intmax_t = int;
typedef __uintmax_t = ffi.UnsignedLong;
typedef Dart__uintmax_t = int;
typedef __dev_t = ffi.UnsignedLong;
typedef Dart__dev_t = int;
typedef __uid_t = ffi.UnsignedInt;
typedef Dart__uid_t = int;
typedef __gid_t = ffi.UnsignedInt;
typedef Dart__gid_t = int;
typedef __ino_t = ffi.UnsignedLong;
typedef Dart__ino_t = int;
typedef __ino64_t = ffi.UnsignedLong;
typedef Dart__ino64_t = int;
typedef __mode_t = ffi.UnsignedInt;
typedef Dart__mode_t = int;
typedef __nlink_t = ffi.UnsignedLong;
typedef Dart__nlink_t = int;
typedef __off_t = ffi.Long;
typedef Dart__off_t = int;
typedef __off64_t = ffi.Long;
typedef Dart__off64_t = int;
typedef __pid_t = ffi.Int;
typedef Dart__pid_t = int;

final class __fsid_t extends ffi.Struct {
  @ffi.Array.multi([2])
  external ffi.Array<ffi.Int> __val;
}

typedef __clock_t = ffi.Long;
typedef Dart__clock_t = int;
typedef __rlim_t = ffi.UnsignedLong;
typedef Dart__rlim_t = int;
typedef __rlim64_t = ffi.UnsignedLong;
typedef Dart__rlim64_t = int;
typedef __id_t = ffi.UnsignedInt;
typedef Dart__id_t = int;
typedef __time_t = ffi.Long;
typedef Dart__time_t = int;
typedef __useconds_t = ffi.UnsignedInt;
typedef Dart__useconds_t = int;
typedef __suseconds_t = ffi.Long;
typedef Dart__suseconds_t = int;
typedef __suseconds64_t = ffi.Long;
typedef Dart__suseconds64_t = int;
typedef __daddr_t = ffi.Int;
typedef Dart__daddr_t = int;
typedef __key_t = ffi.Int;
typedef Dart__key_t = int;
typedef __clockid_t = ffi.Int;
typedef Dart__clockid_t = int;
typedef __timer_t = ffi.Pointer<ffi.Void>;
typedef __blksize_t = ffi.Long;
typedef Dart__blksize_t = int;
typedef __blkcnt_t = ffi.Long;
typedef Dart__blkcnt_t = int;
typedef __blkcnt64_t = ffi.Long;
typedef Dart__blkcnt64_t = int;
typedef __fsblkcnt_t = ffi.UnsignedLong;
typedef Dart__fsblkcnt_t = int;
typedef __fsblkcnt64_t = ffi.UnsignedLong;
typedef Dart__fsblkcnt64_t = int;
typedef __fsfilcnt_t = ffi.UnsignedLong;
typedef Dart__fsfilcnt_t = int;
typedef __fsfilcnt64_t = ffi.UnsignedLong;
typedef Dart__fsfilcnt64_t = int;
typedef __fsword_t = ffi.Long;
typedef Dart__fsword_t = int;
typedef __ssize_t = ffi.Long;
typedef Dart__ssize_t = int;
typedef __syscall_slong_t = ffi.Long;
typedef Dart__syscall_slong_t = int;
typedef __syscall_ulong_t = ffi.UnsignedLong;
typedef Dart__syscall_ulong_t = int;
typedef __loff_t = __off64_t;
typedef __caddr_t = ffi.Pointer<ffi.Char>;
typedef __intptr_t = ffi.Long;
typedef Dart__intptr_t = int;
typedef __socklen_t = ffi.UnsignedInt;
typedef Dart__socklen_t = int;
typedef __sig_atomic_t = ffi.Int;
typedef Dart__sig_atomic_t = int;
typedef int_least8_t = __int_least8_t;
typedef int_least16_t = __int_least16_t;
typedef int_least32_t = __int_least32_t;
typedef int_least64_t = __int_least64_t;
typedef uint_least8_t = __uint_least8_t;
typedef uint_least16_t = __uint_least16_t;
typedef uint_least32_t = __uint_least32_t;
typedef uint_least64_t = __uint_least64_t;
typedef int_fast8_t = ffi.SignedChar;
typedef Dartint_fast8_t = int;
typedef int_fast16_t = ffi.Long;
typedef Dartint_fast16_t = int;
typedef int_fast32_t = ffi.Long;
typedef Dartint_fast32_t = int;
typedef int_fast64_t = ffi.Long;
typedef Dartint_fast64_t = int;
typedef uint_fast8_t = ffi.UnsignedChar;
typedef Dartuint_fast8_t = int;
typedef uint_fast16_t = ffi.UnsignedLong;
typedef Dartuint_fast16_t = int;
typedef uint_fast32_t = ffi.UnsignedLong;
typedef Dartuint_fast32_t = int;
typedef uint_fast64_t = ffi.UnsignedLong;
typedef Dartuint_fast64_t = int;
typedef intmax_t = __intmax_t;
typedef uintmax_t = __uintmax_t;
typedef wint_t = ffi.UnsignedInt;
typedef Dartwint_t = int;

final class UnnamedUnion1 extends ffi.Union {
  @ffi.UnsignedInt()
  external int __wch;

  @ffi.Array.multi([4])
  external ffi.Array<ffi.Char> __wchb;
}

final class __mbstate_t extends ffi.Struct {
  @ffi.Int()
  external int __count;

  external UnnamedUnion1 __value;
}

typedef mbstate_t = __mbstate_t;

final class _IO_marker extends ffi.Opaque {}

typedef _IO_lock_t = ffi.Void;
typedef Dart_IO_lock_t = void;

final class _IO_codecvt extends ffi.Opaque {}

final class _IO_wide_data extends ffi.Opaque {}

final class _IO_FILE extends ffi.Struct {
  @ffi.Int()
  external int _flags;

  external ffi.Pointer<ffi.Char> _IO_read_ptr;

  external ffi.Pointer<ffi.Char> _IO_read_end;

  external ffi.Pointer<ffi.Char> _IO_read_base;

  external ffi.Pointer<ffi.Char> _IO_write_base;

  external ffi.Pointer<ffi.Char> _IO_write_ptr;

  external ffi.Pointer<ffi.Char> _IO_write_end;

  external ffi.Pointer<ffi.Char> _IO_buf_base;

  external ffi.Pointer<ffi.Char> _IO_buf_end;

  external ffi.Pointer<ffi.Char> _IO_save_base;

  external ffi.Pointer<ffi.Char> _IO_backup_base;

  external ffi.Pointer<ffi.Char> _IO_save_end;

  external ffi.Pointer<_IO_marker> _markers;

  external ffi.Pointer<_IO_FILE> _chain;

  @ffi.Int()
  external int _fileno;

  @ffi.Int()
  external int _flags2;

  @__off_t()
  external int _old_offset;

  @ffi.UnsignedShort()
  external int _cur_column;

  @ffi.SignedChar()
  external int _vtable_offset;

  @ffi.Array.multi([1])
  external ffi.Array<ffi.Char> _shortbuf;

  external ffi.Pointer<_IO_lock_t> _lock;

  @__off64_t()
  external int _offset;

  external ffi.Pointer<_IO_codecvt> _codecvt;

  external ffi.Pointer<_IO_wide_data> _wide_data;

  external ffi.Pointer<_IO_FILE> _freeres_list;

  external ffi.Pointer<ffi.Void> _freeres_buf;

  @ffi.Size()
  external int __pad5;

  @ffi.Int()
  external int _mode;

  @ffi.Array.multi([20])
  external ffi.Array<ffi.Char> _unused2;
}

typedef __FILE = _IO_FILE;
typedef FILE = _IO_FILE;
typedef ptrdiff_t = ffi.Long;
typedef Dartptrdiff_t = int;

final class max_align_t extends ffi.Opaque {}

final class sched_param extends ffi.Struct {
  @ffi.Int()
  external int sched_priority;
}

typedef __cpu_mask = ffi.UnsignedLong;
typedef Dart__cpu_mask = int;

final class cpu_set_t extends ffi.Struct {
  @ffi.Array.multi([16])
  external ffi.Array<__cpu_mask> __bits;
}

final class timex extends ffi.Opaque {}

final class tm extends ffi.Struct {
  @ffi.Int()
  external int tm_sec;

  @ffi.Int()
  external int tm_min;

  @ffi.Int()
  external int tm_hour;

  @ffi.Int()
  external int tm_mday;

  @ffi.Int()
  external int tm_mon;

  @ffi.Int()
  external int tm_year;

  @ffi.Int()
  external int tm_wday;

  @ffi.Int()
  external int tm_yday;

  @ffi.Int()
  external int tm_isdst;

  @ffi.Long()
  external int tm_gmtoff;

  external ffi.Pointer<ffi.Char> tm_zone;
}

final class timespec extends ffi.Struct {
  @__time_t()
  external int tv_sec;

  @__syscall_slong_t()
  external int tv_nsec;
}

final class itimerspec extends ffi.Struct {
  external timespec it_interval;

  external timespec it_value;
}

final class sigevent extends ffi.Opaque {}

final class __sigset_t extends ffi.Struct {
  @ffi.Array.multi([16])
  external ffi.Array<ffi.UnsignedLong> __val;
}

final class __jmp_buf_tag extends ffi.Struct {
  @ffi.Array.multi([8])
  external ffi.Array<ffi.Long> __jmpbuf;

  @ffi.Int()
  external int __mask_was_saved;

  external __sigset_t __saved_mask;
}

final class _pthread_cleanup_buffer extends ffi.Struct {
  external ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>> __routine;

  external ffi.Pointer<ffi.Void> __arg;

  @ffi.Int()
  external int __canceltype;

  external ffi.Pointer<_pthread_cleanup_buffer> __prev;
}

typedef pthread_t = ffi.UnsignedLong;
typedef Dartpthread_t = int;
typedef __gthread_t = pthread_t;
typedef pthread_key_t = ffi.UnsignedInt;
typedef Dartpthread_key_t = int;
typedef __gthread_key_t = pthread_key_t;
typedef pthread_once_t = ffi.Int;
typedef Dartpthread_once_t = int;
typedef __gthread_once_t = pthread_once_t;

final class __pthread_internal_list extends ffi.Struct {
  external ffi.Pointer<__pthread_internal_list> __prev;

  external ffi.Pointer<__pthread_internal_list> __next;
}

typedef __pthread_list_t = __pthread_internal_list;

final class __pthread_mutex_s extends ffi.Struct {
  @ffi.Int()
  external int __lock;

  @ffi.UnsignedInt()
  external int __count;

  @ffi.Int()
  external int __owner;

  @ffi.UnsignedInt()
  external int __nusers;

  @ffi.Int()
  external int __kind;

  @ffi.Short()
  external int __spins;

  @ffi.Short()
  external int __elision;

  external __pthread_list_t __list;
}

final class pthread_mutex_t extends ffi.Union {
  external __pthread_mutex_s __data;

  @ffi.Array.multi([40])
  external ffi.Array<ffi.Char> __size;

  @ffi.Long()
  external int __align;
}

typedef __gthread_mutex_t = pthread_mutex_t;
typedef __gthread_recursive_mutex_t = pthread_mutex_t;

final class UnnamedStruct1 extends ffi.Struct {
  @ffi.UnsignedInt()
  external int __low;

  @ffi.UnsignedInt()
  external int __high;
}

final class __atomic_wide_counter extends ffi.Union {
  @ffi.UnsignedLongLong()
  external int __value64;

  external UnnamedStruct1 __value32;
}

final class __pthread_cond_s extends ffi.Struct {
  external __atomic_wide_counter __wseq;

  external __atomic_wide_counter __g1_start;

  @ffi.Array.multi([2])
  external ffi.Array<ffi.UnsignedInt> __g_refs;

  @ffi.Array.multi([2])
  external ffi.Array<ffi.UnsignedInt> __g_size;

  @ffi.UnsignedInt()
  external int __g1_orig_size;

  @ffi.UnsignedInt()
  external int __wrefs;

  @ffi.Array.multi([2])
  external ffi.Array<ffi.UnsignedInt> __g_signals;
}

final class pthread_cond_t extends ffi.Union {
  external __pthread_cond_s __data;

  @ffi.Array.multi([48])
  external ffi.Array<ffi.Char> __size;

  @ffi.LongLong()
  external int __align;
}

typedef __gthread_cond_t = pthread_cond_t;
typedef __gthread_time_t = timespec;
typedef _Atomic_word = ffi.Int;
typedef Dart_Atomic_word = int;
typedef wctype_t = ffi.UnsignedLong;
typedef Dartwctype_t = int;

final class _GoString_ extends ffi.Struct {
  external ffi.Pointer<ffi.Char> p;

  @ptrdiff_t()
  external int n;
}

typedef GoInt8 = ffi.SignedChar;
typedef DartGoInt8 = int;
typedef GoUint8 = ffi.UnsignedChar;
typedef DartGoUint8 = int;
typedef GoInt16 = ffi.Short;
typedef DartGoInt16 = int;
typedef GoUint16 = ffi.UnsignedShort;
typedef DartGoUint16 = int;
typedef GoInt32 = ffi.Int;
typedef DartGoInt32 = int;
typedef GoUint32 = ffi.UnsignedInt;
typedef DartGoUint32 = int;
typedef GoInt64 = ffi.LongLong;
typedef DartGoInt64 = int;
typedef GoUint64 = ffi.UnsignedLongLong;
typedef DartGoUint64 = int;
typedef GoInt = GoInt64;
typedef GoUint = GoUint64;
typedef GoUintptr = ffi.Size;
typedef DartGoUintptr = int;
typedef GoFloat32 = ffi.Float;
typedef DartGoFloat32 = double;
typedef GoFloat64 = ffi.Double;
typedef DartGoFloat64 = double;
typedef GoString = _GoString_;
typedef GoMap = ffi.Pointer<ffi.Void>;
typedef GoChan = ffi.Pointer<ffi.Void>;

final class GoInterface extends ffi.Struct {
  external ffi.Pointer<ffi.Void> t;

  external ffi.Pointer<ffi.Void> v;
}

final class GoSlice extends ffi.Struct {
  external ffi.Pointer<ffi.Void> data;

  @GoInt()
  external int len;

  @GoInt()
  external int cap;
}

const int PTHREAD_CREATE_JOINABLE = 0;

const int PTHREAD_CREATE_DETACHED = 1;

const int PTHREAD_MUTEX_TIMED_NP = 0;

const int PTHREAD_MUTEX_RECURSIVE_NP = 1;

const int PTHREAD_MUTEX_ERRORCHECK_NP = 2;

const int PTHREAD_MUTEX_ADAPTIVE_NP = 3;

const int PTHREAD_MUTEX_NORMAL = 0;

const int PTHREAD_MUTEX_RECURSIVE = 1;

const int PTHREAD_MUTEX_ERRORCHECK = 2;

const int PTHREAD_MUTEX_DEFAULT = 0;

const int PTHREAD_MUTEX_FAST_NP = 0;

const int PTHREAD_MUTEX_STALLED = 0;

const int PTHREAD_MUTEX_STALLED_NP = 0;

const int PTHREAD_MUTEX_ROBUST = 1;

const int PTHREAD_MUTEX_ROBUST_NP = 1;

const int PTHREAD_PRIO_NONE = 0;

const int PTHREAD_PRIO_INHERIT = 1;

const int PTHREAD_PRIO_PROTECT = 2;

const int PTHREAD_RWLOCK_PREFER_READER_NP = 0;

const int PTHREAD_RWLOCK_PREFER_WRITER_NP = 1;

const int PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP = 2;

const int PTHREAD_RWLOCK_DEFAULT_NP = 0;

const int PTHREAD_INHERIT_SCHED = 0;

const int PTHREAD_EXPLICIT_SCHED = 1;

const int PTHREAD_SCOPE_SYSTEM = 0;

const int PTHREAD_SCOPE_PROCESS = 1;

const int PTHREAD_PROCESS_PRIVATE = 0;

const int PTHREAD_PROCESS_SHARED = 1;

const int PTHREAD_CANCEL_ENABLE = 0;

const int PTHREAD_CANCEL_DISABLE = 1;

const int PTHREAD_CANCEL_DEFERRED = 0;

const int PTHREAD_CANCEL_ASYNCHRONOUS = 1;

const int __ISwupper = 0;

const int __ISwlower = 1;

const int __ISwalpha = 2;

const int __ISwdigit = 3;

const int __ISwxdigit = 4;

const int __ISwspace = 5;

const int __ISwprint = 6;

const int __ISwgraph = 7;

const int __ISwblank = 8;

const int __ISwcntrl = 9;

const int __ISwpunct = 10;

const int __ISwalnum = 11;

const int _ISwupper = 16777216;

const int _ISwlower = 33554432;

const int _ISwalpha = 67108864;

const int _ISwdigit = 134217728;

const int _ISwxdigit = 268435456;

const int _ISwspace = 536870912;

const int _ISwprint = 1073741824;

const int _ISwgraph = -2147483648;

const int _ISwblank = 65536;

const int _ISwcntrl = 131072;

const int _ISwpunct = 262144;

const int _ISwalnum = 524288;

const int _GLIBCXX_CXX_CONFIG_H = 1;

const int _GLIBCXX_RELEASE = 13;

const int __GLIBCXX__ = 20240904;

const int _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY = 1;

const int _GLIBCXX_USE_DEPRECATED = 1;

const int _GLIBCXX_NOEXCEPT_QUAL = 1;

const int _GLIBCXX_EXTERN_TEMPLATE = 1;

const int _GLIBCXX_USE_DUAL_ABI = 1;

const int _GLIBCXX_USE_CXX11_ABI = 1;

const int _GLIBCXX_INLINE_VERSION = 0;

const int _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED = 1;

const int _GLIBCXX_VERBOSE_ASSERT = 1;

const int _GLIBCXX_USE_ALLOCATOR_NEW = 1;

const int _GLIBCXX_OS_DEFINES = 1;

const int __NO_CTYPE = 1;

const int _FEATURES_H = 1;

const int _ISOC95_SOURCE = 1;

const int _ISOC99_SOURCE = 1;

const int _ISOC11_SOURCE = 1;

const int _ISOC2X_SOURCE = 1;

const int _POSIX_SOURCE = 1;

const int _POSIX_C_SOURCE = 200809;

const int _XOPEN_SOURCE = 700;

const int _XOPEN_SOURCE_EXTENDED = 1;

const int _LARGEFILE64_SOURCE = 1;

const int _DEFAULT_SOURCE = 1;

const int _ATFILE_SOURCE = 1;

const int _DYNAMIC_STACK_SIZE_SOURCE = 1;

const int __GLIBC_USE_ISOC2X = 1;

const int __USE_ISOC11 = 1;

const int __USE_ISOC99 = 1;

const int __USE_ISOC95 = 1;

const int __USE_ISOCXX11 = 1;

const int __USE_POSIX = 1;

const int __USE_POSIX2 = 1;

const int __USE_POSIX199309 = 1;

const int __USE_POSIX199506 = 1;

const int __USE_XOPEN2K = 1;

const int __USE_XOPEN2K8 = 1;

const int __USE_XOPEN = 1;

const int __USE_XOPEN_EXTENDED = 1;

const int __USE_UNIX98 = 1;

const int _LARGEFILE_SOURCE = 1;

const int __USE_XOPEN2K8XSI = 1;

const int __USE_XOPEN2KXSI = 1;

const int __USE_LARGEFILE = 1;

const int __USE_LARGEFILE64 = 1;

const int __WORDSIZE = 64;

const int __WORDSIZE_TIME64_COMPAT32 = 1;

const int __SYSCALL_WORDSIZE = 64;

const int __TIMESIZE = 64;

const int __USE_MISC = 1;

const int __USE_ATFILE = 1;

const int __USE_DYNAMIC_STACK_SIZE = 1;

const int __USE_GNU = 1;

const int __USE_FORTIFY_LEVEL = 0;

const int __GLIBC_USE_DEPRECATED_GETS = 0;

const int __GLIBC_USE_DEPRECATED_SCANF = 0;

const int __GLIBC_USE_C2X_STRTOL = 1;

const int _STDC_PREDEF_H = 1;

const int __STDC_IEC_559__ = 1;

const int __STDC_IEC_60559_BFP__ = 201404;

const int __STDC_IEC_559_COMPLEX__ = 1;

const int __STDC_IEC_60559_COMPLEX__ = 201404;

const int __STDC_ISO_10646__ = 201706;

const int __GNU_LIBRARY__ = 6;

const int __GLIBC__ = 2;

const int __GLIBC_MINOR__ = 39;

const int _SYS_CDEFS_H = 1;

const int __THROW = 1;

const int __THROWNL = 1;

const int __glibc_c99_flexarr_available = 1;

const int __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI = 0;

const int __HAVE_GENERIC_SELECTION = 0;

const int _GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC = 1;

const int _GLIBCXX_HAVE_FLOAT128_MATH = 1;

const int _GLIBCXX_GTHREAD_USE_WEAK = 0;

const int _GLIBCXX_CPU_DEFINES = 1;

const int _GLIBCXX_USE_WEAK_REF = 1;

const int _GLIBCXX_USE_STD_SPEC_FUNCS = 1;

const int _GLIBCXX_FAST_MATH = 0;

const int _GLIBCXX_USE_C99_MATH = 1;

const int _GLIBCXX_USE_C99_COMPLEX = 1;

const int _GLIBCXX_USE_C99_STDIO = 1;

const int _GLIBCXX_USE_C99_STDLIB = 1;

const int _GLIBCXX_USE_C99_WCHAR = 1;

const int _GLIBCXX_USE_FLOAT128 = 1;

const int _GLIBCXX_FLOAT_IS_IEEE_BINARY32 = 1;

const int _GLIBCXX_DOUBLE_IS_IEEE_BINARY64 = 1;

const int _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP = 1;

const int _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE = 1;

const int _GLIBCXX_HAVE_BUILTIN_IS_SAME = 1;

const int _GLIBCXX_HAVE_BUILTIN_LAUNDER = 1;

const int _PSTL_VERSION = 12000;

const int _PSTL_VERSION_MAJOR = 12;

const int _PSTL_VERSION_MINOR = 0;

const int _PSTL_VERSION_PATCH = 0;

const int _PSTL_USAGE_WARNINGS = 0;

const int _PSTL_GCC_VERSION = 40201;

const int _PSTL_CLANG_VERSION = 180103;

const int _PSTL_UDR_PRESENT = 0;

const String _PSTL_PRAGMA_LOCATION = ' [Parallel STL message]: ';

const int _GLIBCXX_HAVE_ACOSF = 1;

const int _GLIBCXX_HAVE_ACOSL = 1;

const int _GLIBCXX_HAVE_ALIGNED_ALLOC = 1;

const int _GLIBCXX_HAVE_ARC4RANDOM = 1;

const int _GLIBCXX_HAVE_ARPA_INET_H = 1;

const int _GLIBCXX_HAVE_ASINF = 1;

const int _GLIBCXX_HAVE_ASINL = 1;

const int _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE = 1;

const int _GLIBCXX_HAVE_ATAN2F = 1;

const int _GLIBCXX_HAVE_ATAN2L = 1;

const int _GLIBCXX_HAVE_ATANF = 1;

const int _GLIBCXX_HAVE_ATANL = 1;

const int _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY = 1;

const int _GLIBCXX_HAVE_AT_QUICK_EXIT = 1;

const int _GLIBCXX_HAVE_CEILF = 1;

const int _GLIBCXX_HAVE_CEILL = 1;

const int _GLIBCXX_HAVE_COMPLEX_H = 1;

const int _GLIBCXX_HAVE_COSF = 1;

const int _GLIBCXX_HAVE_COSHF = 1;

const int _GLIBCXX_HAVE_COSHL = 1;

const int _GLIBCXX_HAVE_COSL = 1;

const int _GLIBCXX_HAVE_DECL_STRNLEN = 1;

const int _GLIBCXX_HAVE_DIRENT_H = 1;

const int _GLIBCXX_HAVE_DIRFD = 1;

const int _GLIBCXX_HAVE_DLFCN_H = 1;

const int _GLIBCXX_HAVE_ENDIAN_H = 1;

const int _GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46 = 1;

const int _GLIBCXX_HAVE_EXECINFO_H = 1;

const int _GLIBCXX_HAVE_EXPF = 1;

const int _GLIBCXX_HAVE_EXPL = 1;

const int _GLIBCXX_HAVE_FABSF = 1;

const int _GLIBCXX_HAVE_FABSL = 1;

const int _GLIBCXX_HAVE_FCNTL_H = 1;

const int _GLIBCXX_HAVE_FDOPENDIR = 1;

const int _GLIBCXX_HAVE_FENV_H = 1;

const int _GLIBCXX_HAVE_FINITE = 1;

const int _GLIBCXX_HAVE_FINITEF = 1;

const int _GLIBCXX_HAVE_FINITEL = 1;

const int _GLIBCXX_HAVE_FLOAT_H = 1;

const int _GLIBCXX_HAVE_FLOORF = 1;

const int _GLIBCXX_HAVE_FLOORL = 1;

const int _GLIBCXX_HAVE_FMODF = 1;

const int _GLIBCXX_HAVE_FMODL = 1;

const int _GLIBCXX_HAVE_FREXPF = 1;

const int _GLIBCXX_HAVE_FREXPL = 1;

const int _GLIBCXX_HAVE_GETENTROPY = 1;

const int _GLIBCXX_HAVE_GETIPINFO = 1;

const int _GLIBCXX_HAVE_GETS = 1;

const int _GLIBCXX_HAVE_HYPOT = 1;

const int _GLIBCXX_HAVE_HYPOTF = 1;

const int _GLIBCXX_HAVE_HYPOTL = 1;

const int _GLIBCXX_HAVE_ICONV = 1;

const int _GLIBCXX_HAVE_INTTYPES_H = 1;

const int _GLIBCXX_HAVE_ISINFF = 1;

const int _GLIBCXX_HAVE_ISINFL = 1;

const int _GLIBCXX_HAVE_ISNANF = 1;

const int _GLIBCXX_HAVE_ISNANL = 1;

const int _GLIBCXX_HAVE_ISWBLANK = 1;

const int _GLIBCXX_HAVE_LC_MESSAGES = 1;

const int _GLIBCXX_HAVE_LDEXPF = 1;

const int _GLIBCXX_HAVE_LDEXPL = 1;

const int _GLIBCXX_HAVE_LIBINTL_H = 1;

const int _GLIBCXX_HAVE_LIMIT_AS = 1;

const int _GLIBCXX_HAVE_LIMIT_DATA = 1;

const int _GLIBCXX_HAVE_LIMIT_FSIZE = 1;

const int _GLIBCXX_HAVE_LIMIT_RSS = 1;

const int _GLIBCXX_HAVE_LIMIT_VMEM = 0;

const int _GLIBCXX_HAVE_LINK = 1;

const int _GLIBCXX_HAVE_LINK_H = 1;

const int _GLIBCXX_HAVE_LINUX_FUTEX = 1;

const int _GLIBCXX_HAVE_LINUX_RANDOM_H = 1;

const int _GLIBCXX_HAVE_LINUX_TYPES_H = 1;

const int _GLIBCXX_HAVE_LOCALE_H = 1;

const int _GLIBCXX_HAVE_LOG10F = 1;

const int _GLIBCXX_HAVE_LOG10L = 1;

const int _GLIBCXX_HAVE_LOGF = 1;

const int _GLIBCXX_HAVE_LOGL = 1;

const int _GLIBCXX_HAVE_MBSTATE_T = 1;

const int _GLIBCXX_HAVE_MEMALIGN = 1;

const int _GLIBCXX_HAVE_MEMORY_H = 1;

const int _GLIBCXX_HAVE_MODF = 1;

const int _GLIBCXX_HAVE_MODFF = 1;

const int _GLIBCXX_HAVE_MODFL = 1;

const int _GLIBCXX_HAVE_NETDB_H = 1;

const int _GLIBCXX_HAVE_NETINET_IN_H = 1;

const int _GLIBCXX_HAVE_NETINET_TCP_H = 1;

const int _GLIBCXX_HAVE_OPENAT = 1;

const int _GLIBCXX_HAVE_POLL = 1;

const int _GLIBCXX_HAVE_POLL_H = 1;

const int _GLIBCXX_HAVE_POSIX_MEMALIGN = 1;

const int _GLIBCXX_HAVE_POSIX_SEMAPHORE = 1;

const int _GLIBCXX_HAVE_POWF = 1;

const int _GLIBCXX_HAVE_POWL = 1;

const int _GLIBCXX_HAVE_QUICK_EXIT = 1;

const int _GLIBCXX_HAVE_READLINK = 1;

const int _GLIBCXX_HAVE_SECURE_GETENV = 1;

const int _GLIBCXX_HAVE_SETENV = 1;

const int _GLIBCXX_HAVE_SINCOS = 1;

const int _GLIBCXX_HAVE_SINCOSF = 1;

const int _GLIBCXX_HAVE_SINCOSL = 1;

const int _GLIBCXX_HAVE_SINF = 1;

const int _GLIBCXX_HAVE_SINHF = 1;

const int _GLIBCXX_HAVE_SINHL = 1;

const int _GLIBCXX_HAVE_SINL = 1;

const int _GLIBCXX_HAVE_SOCKATMARK = 1;

const int _GLIBCXX_HAVE_SQRTF = 1;

const int _GLIBCXX_HAVE_SQRTL = 1;

const int _GLIBCXX_HAVE_STACKTRACE = 1;

const int _GLIBCXX_HAVE_STDALIGN_H = 1;

const int _GLIBCXX_HAVE_STDBOOL_H = 1;

const int _GLIBCXX_HAVE_STDINT_H = 1;

const int _GLIBCXX_HAVE_STDLIB_H = 1;

const int _GLIBCXX_HAVE_STRERROR_L = 1;

const int _GLIBCXX_HAVE_STRERROR_R = 1;

const int _GLIBCXX_HAVE_STRINGS_H = 1;

const int _GLIBCXX_HAVE_STRING_H = 1;

const int _GLIBCXX_HAVE_STRTOF = 1;

const int _GLIBCXX_HAVE_STRTOLD = 1;

const int _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE = 1;

const int _GLIBCXX_HAVE_STRXFRM_L = 1;

const int _GLIBCXX_HAVE_SYMLINK = 1;

const int _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT = 1;

const int _GLIBCXX_HAVE_SYS_IOCTL_H = 1;

const int _GLIBCXX_HAVE_SYS_IPC_H = 1;

const int _GLIBCXX_HAVE_SYS_MMAN_H = 1;

const int _GLIBCXX_HAVE_SYS_PARAM_H = 1;

const int _GLIBCXX_HAVE_SYS_RESOURCE_H = 1;

const int _GLIBCXX_HAVE_SYS_SDT_H = 1;

const int _GLIBCXX_HAVE_SYS_SEM_H = 1;

const int _GLIBCXX_HAVE_SYS_SOCKET_H = 1;

const int _GLIBCXX_HAVE_SYS_STATVFS_H = 1;

const int _GLIBCXX_HAVE_SYS_STAT_H = 1;

const int _GLIBCXX_HAVE_SYS_SYSINFO_H = 1;

const int _GLIBCXX_HAVE_SYS_TIME_H = 1;

const int _GLIBCXX_HAVE_SYS_TYPES_H = 1;

const int _GLIBCXX_HAVE_SYS_UIO_H = 1;

const int _GLIBCXX_HAVE_S_ISREG = 1;

const int _GLIBCXX_HAVE_TANF = 1;

const int _GLIBCXX_HAVE_TANHF = 1;

const int _GLIBCXX_HAVE_TANHL = 1;

const int _GLIBCXX_HAVE_TANL = 1;

const int _GLIBCXX_HAVE_TGMATH_H = 1;

const int _GLIBCXX_HAVE_TIMESPEC_GET = 1;

const int _GLIBCXX_HAVE_TLS = 1;

const int _GLIBCXX_HAVE_TRUNCATE = 1;

const int _GLIBCXX_HAVE_UCHAR_H = 1;

const int _GLIBCXX_HAVE_UNISTD_H = 1;

const int _GLIBCXX_HAVE_UNLINKAT = 1;

const int _GLIBCXX_HAVE_USELOCALE = 1;

const int _GLIBCXX_HAVE_UTIME_H = 1;

const int _GLIBCXX_HAVE_VFWSCANF = 1;

const int _GLIBCXX_HAVE_VSWSCANF = 1;

const int _GLIBCXX_HAVE_VWSCANF = 1;

const int _GLIBCXX_HAVE_WCHAR_H = 1;

const int _GLIBCXX_HAVE_WCSTOF = 1;

const int _GLIBCXX_HAVE_WCTYPE_H = 1;

const int _GLIBCXX_HAVE_WRITEV = 1;

const int _GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL = 1;

const String _GLIBCXX_LT_OBJDIR = '.libs/';

const String _GLIBCXX_PACKAGE_BUGREPORT = '';

const String _GLIBCXX_PACKAGE_NAME = 'package-unused';

const String _GLIBCXX_PACKAGE_STRING = 'package-unused version-unused';

const String _GLIBCXX_PACKAGE_TARNAME = 'libstdc++';

const String _GLIBCXX_PACKAGE_URL = '';

const String _GLIBCXX_PACKAGE__GLIBCXX_VERSION = 'version-unused';

const int _GLIBCXX_STDC_HEADERS = 1;

const int _GLIBCXX_DARWIN_USE_64_BIT_INODE = 1;

const int _GLIBCXX11_USE_C99_COMPLEX = 1;

const int _GLIBCXX11_USE_C99_MATH = 1;

const int _GLIBCXX11_USE_C99_STDIO = 1;

const int _GLIBCXX11_USE_C99_STDLIB = 1;

const int _GLIBCXX11_USE_C99_WCHAR = 1;

const int _GLIBCXX98_USE_C99_COMPLEX = 1;

const int _GLIBCXX98_USE_C99_MATH = 1;

const int _GLIBCXX98_USE_C99_STDIO = 1;

const int _GLIBCXX98_USE_C99_STDLIB = 1;

const int _GLIBCXX98_USE_C99_WCHAR = 1;

const int _GLIBCXX_ATOMIC_BUILTINS = 1;

const int _GLIBCXX_CAN_ALIGNAS_DESTRUCTIVE_SIZE = 1;

const int _GLIBCXX_FULLY_DYNAMIC_STRING = 0;

const int _GLIBCXX_HAS_GTHREADS = 1;

const int _GLIBCXX_HOSTED = 1;

const int _GLIBCXX_RES_LIMITS = 1;

const int _GLIBCXX_STATIC_TZDATA = 1;

const int _GLIBCXX_STDIO_EOF = -1;

const int _GLIBCXX_STDIO_SEEK_CUR = 1;

const int _GLIBCXX_STDIO_SEEK_END = 2;

const int _GLIBCXX_SYMVER = 1;

const int _GLIBCXX_SYMVER_GNU = 1;

const int _GLIBCXX_USE_C11_UCHAR_CXX11 = 1;

const int _GLIBCXX_USE_C99 = 1;

const int _GLIBCXX_USE_C99_COMPLEX_TR1 = 1;

const int _GLIBCXX_USE_C99_CTYPE_TR1 = 1;

const int _GLIBCXX_USE_C99_FENV_TR1 = 1;

const int _GLIBCXX_USE_C99_INTTYPES_TR1 = 1;

const int _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 = 1;

const int _GLIBCXX_USE_C99_MATH_TR1 = 1;

const int _GLIBCXX_USE_C99_STDINT_TR1 = 1;

const int _GLIBCXX_USE_CHDIR = 1;

const int _GLIBCXX_USE_CHMOD = 1;

const int _GLIBCXX_USE_CLOCK_MONOTONIC = 1;

const int _GLIBCXX_USE_CLOCK_REALTIME = 1;

const int _GLIBCXX_USE_DECIMAL_FLOAT = 1;

const int _GLIBCXX_USE_DEV_RANDOM = 1;

const int _GLIBCXX_USE_FCHMOD = 1;

const int _GLIBCXX_USE_FCHMODAT = 1;

const int _GLIBCXX_USE_FSEEKO_FTELLO = 1;

const int _GLIBCXX_USE_GETCWD = 1;

const int _GLIBCXX_USE_GETTIMEOFDAY = 1;

const int _GLIBCXX_USE_GET_NPROCS = 1;

const int _GLIBCXX_USE_INIT_PRIORITY_ATTRIBUTE = 1;

const int _GLIBCXX_USE_LFS = 1;

const int _GLIBCXX_USE_LONG_LONG = 1;

const int _GLIBCXX_USE_LSTAT = 1;

const int _GLIBCXX_USE_MKDIR = 1;

const int _GLIBCXX_USE_NANOSLEEP = 1;

const int _GLIBCXX_USE_NLS = 1;

const int _GLIBCXX_USE_PTHREAD_COND_CLOCKWAIT = 1;

const int _GLIBCXX_USE_PTHREAD_MUTEX_CLOCKLOCK = 1;

const int _GLIBCXX_USE_PTHREAD_RWLOCK_CLOCKLOCK = 1;

const int _GLIBCXX_USE_PTHREAD_RWLOCK_T = 1;

const int _GLIBCXX_USE_RANDOM_TR1 = 1;

const int _GLIBCXX_USE_REALPATH = 1;

const int _GLIBCXX_USE_SCHED_YIELD = 1;

const int _GLIBCXX_USE_SC_NPROCESSORS_ONLN = 1;

const int _GLIBCXX_USE_SENDFILE = 1;

const int _GLIBCXX_USE_ST_MTIM = 1;

const int _GLIBCXX_USE_TMPNAM = 1;

const int _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_CXX20 = 1;

const int _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_FCHAR8_T = 1;

const int _GLIBCXX_USE_UTIME = 1;

const int _GLIBCXX_USE_UTIMENSAT = 1;

const int _GLIBCXX_USE_WCHAR_T = 1;

const int _GLIBCXX_VERBOSE = 1;

const int _GLIBCXX_X86_RDRAND = 1;

const int _GLIBCXX_X86_RDSEED = 1;

const String _GLIBCXX_ZONEINFO_DIR = '/usr/share/zoneinfo';

const int _GTHREAD_USE_MUTEX_TIMEDLOCK = 1;

const int _GLIBCXX_CSTDARG = 1;

const int _GLIBCXX_CSTDINT = 1;

const int _STDINT_H = 1;

const int __GLIBC_USE_LIB_EXT2 = 1;

const int __GLIBC_USE_IEC_60559_BFP_EXT = 1;

const int __GLIBC_USE_IEC_60559_BFP_EXT_C2X = 1;

const int __GLIBC_USE_IEC_60559_EXT = 1;

const int __GLIBC_USE_IEC_60559_FUNCS_EXT = 1;

const int __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X = 1;

const int __GLIBC_USE_IEC_60559_TYPES_EXT = 1;

const int _BITS_TYPES_H = 1;

const int _BITS_TYPESIZES_H = 1;

const int __OFF_T_MATCHES_OFF64_T = 1;

const int __INO_T_MATCHES_INO64_T = 1;

const int __RLIM_T_MATCHES_RLIM64_T = 1;

const int __STATFS_MATCHES_STATFS64 = 1;

const int __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 = 1;

const int __FD_SETSIZE = 1024;

const int _BITS_TIME64_H = 1;

const int _BITS_WCHAR_H = 1;

const int __WCHAR_MAX = 2147483647;

const int __WCHAR_MIN = -2147483648;

const int _BITS_STDINT_INTN_H = 1;

const int _BITS_STDINT_UINTN_H = 1;

const int _BITS_STDINT_LEAST_H = 1;

const int INT8_MIN = -128;

const int INT16_MIN = -32768;

const int INT32_MIN = -2147483648;

const int INT64_MIN = -9223372036854775808;

const int INT8_MAX = 127;

const int INT16_MAX = 32767;

const int INT32_MAX = 2147483647;

const int INT64_MAX = 9223372036854775807;

const int UINT8_MAX = 255;

const int UINT16_MAX = 65535;

const int UINT32_MAX = 4294967295;

const int UINT64_MAX = -1;

const int INT_LEAST8_MIN = -128;

const int INT_LEAST16_MIN = -32768;

const int INT_LEAST32_MIN = -2147483648;

const int INT_LEAST64_MIN = -9223372036854775808;

const int INT_LEAST8_MAX = 127;

const int INT_LEAST16_MAX = 32767;

const int INT_LEAST32_MAX = 2147483647;

const int INT_LEAST64_MAX = 9223372036854775807;

const int UINT_LEAST8_MAX = 255;

const int UINT_LEAST16_MAX = 65535;

const int UINT_LEAST32_MAX = 4294967295;

const int UINT_LEAST64_MAX = -1;

const int INT_FAST8_MIN = -128;

const int INT_FAST16_MIN = -9223372036854775808;

const int INT_FAST32_MIN = -9223372036854775808;

const int INT_FAST64_MIN = -9223372036854775808;

const int INT_FAST8_MAX = 127;

const int INT_FAST16_MAX = 9223372036854775807;

const int INT_FAST32_MAX = 9223372036854775807;

const int INT_FAST64_MAX = 9223372036854775807;

const int UINT_FAST8_MAX = 255;

const int UINT_FAST16_MAX = -1;

const int UINT_FAST32_MAX = -1;

const int UINT_FAST64_MAX = -1;

const int INTPTR_MIN = -9223372036854775808;

const int INTPTR_MAX = 9223372036854775807;

const int UINTPTR_MAX = -1;

const int INTMAX_MIN = -9223372036854775808;

const int INTMAX_MAX = 9223372036854775807;

const int UINTMAX_MAX = -1;

const int PTRDIFF_MIN = -9223372036854775808;

const int PTRDIFF_MAX = 9223372036854775807;

const int SIG_ATOMIC_MIN = -2147483648;

const int SIG_ATOMIC_MAX = 2147483647;

const int SIZE_MAX = -1;

const int WCHAR_MIN = -2147483648;

const int WCHAR_MAX = 2147483647;

const int WINT_MIN = 0;

const int WINT_MAX = 4294967295;

const int INT8_WIDTH = 8;

const int UINT8_WIDTH = 8;

const int INT16_WIDTH = 16;

const int UINT16_WIDTH = 16;

const int INT32_WIDTH = 32;

const int UINT32_WIDTH = 32;

const int INT64_WIDTH = 64;

const int UINT64_WIDTH = 64;

const int INT_LEAST8_WIDTH = 8;

const int UINT_LEAST8_WIDTH = 8;

const int INT_LEAST16_WIDTH = 16;

const int UINT_LEAST16_WIDTH = 16;

const int INT_LEAST32_WIDTH = 32;

const int UINT_LEAST32_WIDTH = 32;

const int INT_LEAST64_WIDTH = 64;

const int UINT_LEAST64_WIDTH = 64;

const int INT_FAST8_WIDTH = 8;

const int UINT_FAST8_WIDTH = 8;

const int INT_FAST16_WIDTH = 64;

const int UINT_FAST16_WIDTH = 64;

const int INT_FAST32_WIDTH = 64;

const int UINT_FAST32_WIDTH = 64;

const int INT_FAST64_WIDTH = 64;

const int UINT_FAST64_WIDTH = 64;

const int INTPTR_WIDTH = 64;

const int UINTPTR_WIDTH = 64;

const int INTMAX_WIDTH = 64;

const int UINTMAX_WIDTH = 64;

const int PTRDIFF_WIDTH = 64;

const int SIG_ATOMIC_WIDTH = 32;

const int SIZE_WIDTH = 64;

const int WCHAR_WIDTH = 32;

const int WINT_WIDTH = 32;

const int _GLIBCXX_CSTDLIB = 1;

const int NULL = 0;

const int _STDLIB_H = 1;

const int WNOHANG = 1;

const int WUNTRACED = 2;

const int WSTOPPED = 2;

const int WEXITED = 4;

const int WCONTINUED = 8;

const int WNOWAIT = 16777216;

const int __WNOTHREAD = 536870912;

const int __WALL = 1073741824;

const int __WCLONE = 2147483648;

const int __W_CONTINUED = 65535;

const int __WCOREFLAG = 128;

const int __HAVE_FLOAT128 = 0;

const int __HAVE_DISTINCT_FLOAT128 = 0;

const int __HAVE_FLOAT64X = 1;

const int __HAVE_FLOAT64X_LONG_DOUBLE = 1;

const int __HAVE_FLOAT16 = 0;

const int __HAVE_FLOAT32 = 1;

const int __HAVE_FLOAT64 = 1;

const int __HAVE_FLOAT32X = 1;

const int __HAVE_FLOAT128X = 0;

const int __HAVE_DISTINCT_FLOAT16 = 0;

const int __HAVE_DISTINCT_FLOAT32 = 0;

const int __HAVE_DISTINCT_FLOAT64 = 0;

const int __HAVE_DISTINCT_FLOAT32X = 0;

const int __HAVE_DISTINCT_FLOAT64X = 0;

const int __HAVE_DISTINCT_FLOAT128X = 0;

const int __HAVE_FLOAT128_UNLIKE_LDBL = 0;

const int __HAVE_FLOATN_NOT_TYPEDEF = 0;

const int __ldiv_t_defined = 1;

const int __lldiv_t_defined = 1;

const int RAND_MAX = 2147483647;

const int EXIT_FAILURE = 1;

const int EXIT_SUCCESS = 0;

const int _BITS_TYPES_LOCALE_T_H = 1;

const int _BITS_TYPES___LOCALE_T_H = 1;

const int _SYS_TYPES_H = 1;

const int __clock_t_defined = 1;

const int __clockid_t_defined = 1;

const int __time_t_defined = 1;

const int __timer_t_defined = 1;

const int __BIT_TYPES_DEFINED__ = 1;

const int _ENDIAN_H = 1;

const int _BITS_ENDIAN_H = 1;

const int __LITTLE_ENDIAN = 1234;

const int __BIG_ENDIAN = 4321;

const int __PDP_ENDIAN = 3412;

const int _BITS_ENDIANNESS_H = 1;

const int __BYTE_ORDER = 1234;

const int __FLOAT_WORD_ORDER = 1234;

const int LITTLE_ENDIAN = 1234;

const int BIG_ENDIAN = 4321;

const int PDP_ENDIAN = 3412;

const int BYTE_ORDER = 1234;

const int _BITS_BYTESWAP_H = 1;

const int _BITS_UINTN_IDENTITY_H = 1;

const int _SYS_SELECT_H = 1;

const int __sigset_t_defined = 1;

const int _SIGSET_NWORDS = 16;

const int __timeval_defined = 1;

const int _STRUCT_TIMESPEC = 1;

const int __NFDBITS = 64;

const int FD_SETSIZE = 1024;

const int NFDBITS = 64;

const int _BITS_PTHREADTYPES_COMMON_H = 1;

const int _THREAD_SHARED_TYPES_H = 1;

const int _BITS_PTHREADTYPES_ARCH_H = 1;

const int __SIZEOF_PTHREAD_MUTEX_T = 40;

const int __SIZEOF_PTHREAD_ATTR_T = 56;

const int __SIZEOF_PTHREAD_RWLOCK_T = 56;

const int __SIZEOF_PTHREAD_BARRIER_T = 32;

const int __SIZEOF_PTHREAD_MUTEXATTR_T = 4;

const int __SIZEOF_PTHREAD_COND_T = 48;

const int __SIZEOF_PTHREAD_CONDATTR_T = 4;

const int __SIZEOF_PTHREAD_RWLOCKATTR_T = 8;

const int __SIZEOF_PTHREAD_BARRIERATTR_T = 4;

const int _THREAD_MUTEX_INTERNAL_H = 1;

const int __PTHREAD_MUTEX_HAVE_PREV = 1;

const int __PTHREAD_RWLOCK_ELISION_EXTRA = 0;

const int __have_pthread_attr_t = 1;

const int _ALLOCA_H = 1;

const int _GLIBCXX_OSTREAM = 1;

const int _REQUIRES_FREESTANDING_H = 1;

const int _GLIBCXX_IOS = 1;

const int _GLIBCXX_IOSFWD = 1;

const int _STRINGFWD_H = 1;

const int _MEMORYFWD_H = 1;

const int _GLIBCXX_POSTYPES_H = 1;

const int _WCHAR_H = 1;

const int __wint_t_defined = 1;

const int _WINT_T = 1;

const int __mbstate_t_defined = 1;

const int ____mbstate_t_defined = 1;

const int ____FILE_defined = 1;

const int __FILE_defined = 1;

const int WEOF = 4294967295;

const int _GLIBCXX_CWCHAR = 1;

const int __EXCEPTION_H = 1;

const int __cpp_lib_uncaught_exceptions = 201411;

const int _EXCEPTION_DEFINES_H = 1;

const int _CXXABI_INIT_EXCEPTION_H = 1;

const int _GLIBCXX_HAVE_CDTOR_CALLABI = 0;

const int _HASH_BYTES_H = 1;

const int __GXX_MERGED_TYPEINFO_NAMES = 0;

const int __GXX_TYPEINFO_EQUALITY_INLINE = 1;

const int __cpp_lib_launder = 201606;

const int _MOVE_H = 1;

const int _GLIBCXX_TYPE_TRAITS = 1;

const int __cpp_lib_integral_constant_callable = 201304;

const int __cpp_lib_bool_constant = 201505;

const int __cpp_lib_logical_traits = 201510;

const int __cpp_lib_is_null_pointer = 201309;

const int __cpp_lib_is_final = 201402;

const int __cpp_lib_transformation_trait_aliases = 201304;

const int __cpp_lib_result_of_sfinae = 201210;

const int __cpp_lib_void_t = 201411;

const int __cpp_lib_is_swappable = 201603;

const int __cpp_lib_is_invocable = 201703;

const int __cpp_lib_type_trait_variable_templates = 201510;

const int __cpp_lib_has_unique_object_representations = 201606;

const int __cpp_lib_is_aggregate = 201703;

const int __cpp_lib_addressof_constexpr = 201603;

const int _GLIBCXX_NESTED_EXCEPTION_H = 1;

const int _CHAR_TRAITS_H = 1;

const int __cpp_lib_constexpr_char_traits = 201611;

const int _LOCALE_FWD_H = 1;

const int _GLIBCXX_CXX_LOCALE_H = 1;

const int _LOCALE_H = 1;

const int _BITS_LOCALE_H = 1;

const int __LC_CTYPE = 0;

const int __LC_NUMERIC = 1;

const int __LC_TIME = 2;

const int __LC_COLLATE = 3;

const int __LC_MONETARY = 4;

const int __LC_MESSAGES = 5;

const int __LC_ALL = 6;

const int __LC_PAPER = 7;

const int __LC_NAME = 8;

const int __LC_ADDRESS = 9;

const int __LC_TELEPHONE = 10;

const int __LC_MEASUREMENT = 11;

const int __LC_IDENTIFICATION = 12;

const int LC_CTYPE = 0;

const int LC_NUMERIC = 1;

const int LC_TIME = 2;

const int LC_COLLATE = 3;

const int LC_MONETARY = 4;

const int LC_MESSAGES = 5;

const int LC_ALL = 6;

const int LC_PAPER = 7;

const int LC_NAME = 8;

const int LC_ADDRESS = 9;

const int LC_TELEPHONE = 10;

const int LC_MEASUREMENT = 11;

const int LC_IDENTIFICATION = 12;

const int LC_CTYPE_MASK = 1;

const int LC_NUMERIC_MASK = 2;

const int LC_TIME_MASK = 4;

const int LC_COLLATE_MASK = 8;

const int LC_MONETARY_MASK = 16;

const int LC_MESSAGES_MASK = 32;

const int LC_PAPER_MASK = 128;

const int LC_NAME_MASK = 256;

const int LC_ADDRESS_MASK = 512;

const int LC_TELEPHONE_MASK = 1024;

const int LC_MEASUREMENT_MASK = 2048;

const int LC_IDENTIFICATION_MASK = 4096;

const int LC_ALL_MASK = 8127;

const int _GLIBCXX_CLOCALE = 1;

const int _GLIBCXX_C_LOCALE_GNU = 1;

const int _GLIBCXX_NUM_CATEGORIES = 6;

const int _CTYPE_H = 1;

const int _GLIBCXX_CCTYPE = 1;

const int _IOS_BASE_H = 1;

const int _GLIBCXX_ATOMICITY_H = 1;

const int __GTHREADS = 1;

const int __GTHREADS_CXX0X = 1;

const int _PTHREAD_H = 1;

const int _SCHED_H = 1;

const int _BITS_SCHED_H = 1;

const int SCHED_OTHER = 0;

const int SCHED_FIFO = 1;

const int SCHED_RR = 2;

const int SCHED_BATCH = 3;

const int SCHED_ISO = 4;

const int SCHED_IDLE = 5;

const int SCHED_DEADLINE = 6;

const int SCHED_RESET_ON_FORK = 1073741824;

const int CSIGNAL = 255;

const int CLONE_VM = 256;

const int CLONE_FS = 512;

const int CLONE_FILES = 1024;

const int CLONE_SIGHAND = 2048;

const int CLONE_PIDFD = 4096;

const int CLONE_PTRACE = 8192;

const int CLONE_VFORK = 16384;

const int CLONE_PARENT = 32768;

const int CLONE_THREAD = 65536;

const int CLONE_NEWNS = 131072;

const int CLONE_SYSVSEM = 262144;

const int CLONE_SETTLS = 524288;

const int CLONE_PARENT_SETTID = 1048576;

const int CLONE_CHILD_CLEARTID = 2097152;

const int CLONE_DETACHED = 4194304;

const int CLONE_UNTRACED = 8388608;

const int CLONE_CHILD_SETTID = 16777216;

const int CLONE_NEWCGROUP = 33554432;

const int CLONE_NEWUTS = 67108864;

const int CLONE_NEWIPC = 134217728;

const int CLONE_NEWUSER = 268435456;

const int CLONE_NEWPID = 536870912;

const int CLONE_NEWNET = 1073741824;

const int CLONE_IO = 2147483648;

const int CLONE_NEWTIME = 128;

const int _BITS_TYPES_STRUCT_SCHED_PARAM = 1;

const int _BITS_CPU_SET_H = 1;

const int __CPU_SETSIZE = 1024;

const int __NCPUBITS = 64;

const int CPU_SETSIZE = 1024;

const int _TIME_H = 1;

const int _BITS_TIME_H = 1;

const int CLOCKS_PER_SEC = 1000000;

const int CLOCK_REALTIME = 0;

const int CLOCK_MONOTONIC = 1;

const int CLOCK_PROCESS_CPUTIME_ID = 2;

const int CLOCK_THREAD_CPUTIME_ID = 3;

const int CLOCK_MONOTONIC_RAW = 4;

const int CLOCK_REALTIME_COARSE = 5;

const int CLOCK_MONOTONIC_COARSE = 6;

const int CLOCK_BOOTTIME = 7;

const int CLOCK_REALTIME_ALARM = 8;

const int CLOCK_BOOTTIME_ALARM = 9;

const int CLOCK_TAI = 11;

const int TIMER_ABSTIME = 1;

const int _BITS_TIMEX_H = 1;

const int ADJ_OFFSET = 1;

const int ADJ_FREQUENCY = 2;

const int ADJ_MAXERROR = 4;

const int ADJ_ESTERROR = 8;

const int ADJ_STATUS = 16;

const int ADJ_TIMECONST = 32;

const int ADJ_TAI = 128;

const int ADJ_SETOFFSET = 256;

const int ADJ_MICRO = 4096;

const int ADJ_NANO = 8192;

const int ADJ_TICK = 16384;

const int ADJ_OFFSET_SINGLESHOT = 32769;

const int ADJ_OFFSET_SS_READ = 40961;

const int MOD_OFFSET = 1;

const int MOD_FREQUENCY = 2;

const int MOD_MAXERROR = 4;

const int MOD_ESTERROR = 8;

const int MOD_STATUS = 16;

const int MOD_TIMECONST = 32;

const int MOD_CLKB = 16384;

const int MOD_CLKA = 32769;

const int MOD_TAI = 128;

const int MOD_MICRO = 4096;

const int MOD_NANO = 8192;

const int STA_PLL = 1;

const int STA_PPSFREQ = 2;

const int STA_PPSTIME = 4;

const int STA_FLL = 8;

const int STA_INS = 16;

const int STA_DEL = 32;

const int STA_UNSYNC = 64;

const int STA_FREQHOLD = 128;

const int STA_PPSSIGNAL = 256;

const int STA_PPSJITTER = 512;

const int STA_PPSWANDER = 1024;

const int STA_PPSERROR = 2048;

const int STA_CLOCKERR = 4096;

const int STA_NANO = 8192;

const int STA_MODE = 16384;

const int STA_CLK = 32768;

const int STA_RONLY = 65280;

const int __struct_tm_defined = 1;

const int __itimerspec_defined = 1;

const int TIME_UTC = 1;

const int _BITS_SETJMP_H = 1;

const int __jmp_buf_tag_defined = 1;

const int __SC_THREAD_STACK_MIN_VALUE = 75;

const int PTHREAD_CREATE_JOINABLE1 = 0;

const int PTHREAD_CREATE_DETACHED1 = 1;

const int PTHREAD_INHERIT_SCHED1 = 0;

const int PTHREAD_EXPLICIT_SCHED1 = 1;

const int PTHREAD_SCOPE_SYSTEM1 = 0;

const int PTHREAD_SCOPE_PROCESS1 = 1;

const int PTHREAD_PROCESS_PRIVATE1 = 0;

const int PTHREAD_PROCESS_SHARED1 = 1;

const int PTHREAD_CANCEL_ENABLE1 = 0;

const int PTHREAD_CANCEL_DISABLE1 = 1;

const int PTHREAD_CANCEL_DEFERRED1 = 0;

const int PTHREAD_CANCEL_ASYNCHRONOUS1 = 1;

const int PTHREAD_ONCE_INIT = 0;

const int PTHREAD_BARRIER_SERIAL_THREAD = -1;

const int PTHREAD_ATTR_NO_SIGMASK_NP = -1;

const int __GTHREAD_HAS_COND = 1;

const int __GTHREAD_ONCE_INIT = 0;

const int _GLIBCXX_ATOMIC_WORD_H = 1;

const int _LOCALE_CLASSES_H = 1;

const int _GLIBCXX_STRING = 1;

const int _ALLOCATOR_H = 1;

const int _GLIBCXX_CXX_ALLOCATOR_H = 1;

const int _STD_NEW_ALLOCATOR_H = 1;

const int _FUNCTEXCEPT_H = 1;

const int __cpp_lib_incomplete_container_elements = 201505;

const int _CPP_TYPE_TRAITS_H = 1;

const int _OSTREAM_INSERT_H = 1;

const int _CXXABI_FORCED_H = 1;

const int _STL_ITERATOR_BASE_FUNCS_H = 1;

const int _CONCEPT_CHECK_H = 1;

const int _GLIBCXX_DEBUG_ASSERTIONS_H = 1;

const int _STL_ITERATOR_BASE_TYPES_H = 1;

const int _STL_ITERATOR_H = 1;

const int _EXT_TYPE_TRAITS = 1;

const int _PTR_TRAITS_H = 1;

const int __cpp_lib_array_constexpr = 201803;

const int __cpp_lib_make_reverse_iterator = 201402;

const int _STL_FUNCTION_H = 1;

const int __cpp_lib_transparent_operators = 201510;

const int _BACKWARD_BINDERS_H = 1;

const int _EXT_NUMERIC_TRAITS = 1;

const int _STL_ALGOBASE_H = 1;

const int _STL_PAIR_H = 1;

const int _GLIBCXX_UTILITY_H = 1;

const int __cpp_lib_tuple_element_t = 201402;

const int __cpp_lib_integer_sequence = 201304;

const int __cpp_lib_tuples_by_type = 201304;

const int _GLIBCXX_DEBUG_MACRO_SWITCH_H = 1;

const int _GLIBCXX_PREDEFINED_OPS_H = 1;

const int _GLIBCXX_BIT = 1;

const int __cpp_lib_robust_nonmodifying_seq_ops = 201304;

const int _GLIBCXX_REFWRAP_H = 1;

const int _GLIBCXX_INVOKE_H = 1;

const int _GLIBCXX_RANGE_ACCESS_H = 1;

const int __cpp_lib_nonmember_container_access = 201411;

const int _BASIC_STRING_H = 1;

const int _EXT_ALLOC_TRAITS_H = 1;

const int _ALLOC_TRAITS_H = 1;

const int _STL_CONSTRUCT_H = 1;

const int __cpp_lib_allocator_traits_is_always_equal = 201411;

const int _GLIBCXX_STRING_VIEW = 1;

const int _FUNCTIONAL_HASH_H = 1;

const int __cpp_lib_string_view = 201803;

const int _GLIBCXX_STRING_VIEW_TCC = 1;

const int __cpp_lib_constexpr_string = 201611;

const int _STRING_CONVERSIONS_H = 1;

const int _STDIO_H = 1;

const int _____fpos_t_defined = 1;

const int _____fpos64_t_defined = 1;

const int __struct_FILE_defined = 1;

const int _IO_EOF_SEEN = 16;

const int _IO_ERR_SEEN = 32;

const int _IO_USER_LOCK = 32768;

const int __cookie_io_functions_t_defined = 1;

const int _IOFBF = 0;

const int _IOLBF = 1;

const int _IONBF = 2;

const int BUFSIZ = 8192;

const int EOF = -1;

const int SEEK_SET = 0;

const int SEEK_CUR = 1;

const int SEEK_END = 2;

const int SEEK_DATA = 3;

const int SEEK_HOLE = 4;

const String P_tmpdir = '/tmp';

const int L_tmpnam = 20;

const int TMP_MAX = 238328;

const int _BITS_STDIO_LIM_H = 1;

const int FILENAME_MAX = 4096;

const int L_ctermid = 9;

const int L_cuserid = 9;

const int FOPEN_MAX = 16;

const int _PRINTF_NAN_LEN_MAX = 4;

const int RENAME_NOREPLACE = 1;

const int RENAME_EXCHANGE = 2;

const int RENAME_WHITEOUT = 4;

const int _GLIBCXX_CSTDIO = 1;

const int _ERRNO_H = 1;

const int _BITS_ERRNO_H = 1;

const int EPERM = 1;

const int ENOENT = 2;

const int ESRCH = 3;

const int EINTR = 4;

const int EIO = 5;

const int ENXIO = 6;

const int E2BIG = 7;

const int ENOEXEC = 8;

const int EBADF = 9;

const int ECHILD = 10;

const int EAGAIN = 11;

const int ENOMEM = 12;

const int EACCES = 13;

const int EFAULT = 14;

const int ENOTBLK = 15;

const int EBUSY = 16;

const int EEXIST = 17;

const int EXDEV = 18;

const int ENODEV = 19;

const int ENOTDIR = 20;

const int EISDIR = 21;

const int EINVAL = 22;

const int ENFILE = 23;

const int EMFILE = 24;

const int ENOTTY = 25;

const int ETXTBSY = 26;

const int EFBIG = 27;

const int ENOSPC = 28;

const int ESPIPE = 29;

const int EROFS = 30;

const int EMLINK = 31;

const int EPIPE = 32;

const int EDOM = 33;

const int ERANGE = 34;

const int EDEADLK = 35;

const int ENAMETOOLONG = 36;

const int ENOLCK = 37;

const int ENOSYS = 38;

const int ENOTEMPTY = 39;

const int ELOOP = 40;

const int EWOULDBLOCK = 11;

const int ENOMSG = 42;

const int EIDRM = 43;

const int ECHRNG = 44;

const int EL2NSYNC = 45;

const int EL3HLT = 46;

const int EL3RST = 47;

const int ELNRNG = 48;

const int EUNATCH = 49;

const int ENOCSI = 50;

const int EL2HLT = 51;

const int EBADE = 52;

const int EBADR = 53;

const int EXFULL = 54;

const int ENOANO = 55;

const int EBADRQC = 56;

const int EBADSLT = 57;

const int EDEADLOCK = 35;

const int EBFONT = 59;

const int ENOSTR = 60;

const int ENODATA = 61;

const int ETIME = 62;

const int ENOSR = 63;

const int ENONET = 64;

const int ENOPKG = 65;

const int EREMOTE = 66;

const int ENOLINK = 67;

const int EADV = 68;

const int ESRMNT = 69;

const int ECOMM = 70;

const int EPROTO = 71;

const int EMULTIHOP = 72;

const int EDOTDOT = 73;

const int EBADMSG = 74;

const int EOVERFLOW = 75;

const int ENOTUNIQ = 76;

const int EBADFD = 77;

const int EREMCHG = 78;

const int ELIBACC = 79;

const int ELIBBAD = 80;

const int ELIBSCN = 81;

const int ELIBMAX = 82;

const int ELIBEXEC = 83;

const int EILSEQ = 84;

const int ERESTART = 85;

const int ESTRPIPE = 86;

const int EUSERS = 87;

const int ENOTSOCK = 88;

const int EDESTADDRREQ = 89;

const int EMSGSIZE = 90;

const int EPROTOTYPE = 91;

const int ENOPROTOOPT = 92;

const int EPROTONOSUPPORT = 93;

const int ESOCKTNOSUPPORT = 94;

const int EOPNOTSUPP = 95;

const int EPFNOSUPPORT = 96;

const int EAFNOSUPPORT = 97;

const int EADDRINUSE = 98;

const int EADDRNOTAVAIL = 99;

const int ENETDOWN = 100;

const int ENETUNREACH = 101;

const int ENETRESET = 102;

const int ECONNABORTED = 103;

const int ECONNRESET = 104;

const int ENOBUFS = 105;

const int EISCONN = 106;

const int ENOTCONN = 107;

const int ESHUTDOWN = 108;

const int ETOOMANYREFS = 109;

const int ETIMEDOUT = 110;

const int ECONNREFUSED = 111;

const int EHOSTDOWN = 112;

const int EHOSTUNREACH = 113;

const int EALREADY = 114;

const int EINPROGRESS = 115;

const int ESTALE = 116;

const int EUCLEAN = 117;

const int ENOTNAM = 118;

const int ENAVAIL = 119;

const int EISNAM = 120;

const int EREMOTEIO = 121;

const int EDQUOT = 122;

const int ENOMEDIUM = 123;

const int EMEDIUMTYPE = 124;

const int ECANCELED = 125;

const int ENOKEY = 126;

const int EKEYEXPIRED = 127;

const int EKEYREVOKED = 128;

const int EKEYREJECTED = 129;

const int EOWNERDEAD = 130;

const int ENOTRECOVERABLE = 131;

const int ERFKILL = 132;

const int EHWPOISON = 133;

const int ENOTSUP = 95;

const int __error_t_defined = 1;

const int _GLIBCXX_CERRNO = 1;

const int _GLIBCXX_CHARCONV_H = 1;

const int __cpp_lib_string_udls = 201304;

const int _BASIC_STRING_TCC = 1;

const int _GLIBCXX_MEMORY_RESOURCE_H = 1;

const int _GLIBCXX_CSTDDEF = 1;

const int __cpp_lib_byte = 201603;

const int _USES_ALLOCATOR_H = 1;

const int _USES_ALLOCATOR_ARGS = 1;

const int _GLIBCXX_TUPLE = 1;

const int __cpp_lib_apply = 201603;

const int __cpp_lib_make_from_tuple = 201606;

const int _LOCALE_CLASSES_TCC = 1;

const int _GLIBCXX_SYSTEM_ERROR = 1;

const int _GLIBCXX_ERROR_CONSTANTS = 1;

const int _GLIBCXX_STDEXCEPT = 1;

const int _GLIBXX_STREAMBUF = 1;

const int _STREAMBUF_TCC = 1;

const int _BASIC_IOS_H = 1;

const int _LOCALE_FACETS_H = 1;

const int _WCTYPE_H = 1;

const int _BITS_WCTYPE_WCHAR_H = 1;

const int _GLIBCXX_CWCTYPE = 1;

const int _STREAMBUF_ITERATOR_H = 1;

const int _GLIBCXX_NUM_FACETS = 14;

const int _GLIBCXX_NUM_CXX11_FACETS = 8;

const int _GLIBCXX_NUM_UNICODE_FACETS = 2;

const int _GLIBCXX_NUM_LBDL_ALT128_FACETS = 6;

const int _LOCALE_FACETS_TCC = 1;

const int _BASIC_IOS_TCC = 1;

const int _OSTREAM_TCC = 1;
